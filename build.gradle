buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.4.RELEASE")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'academy-rest-service-2.0'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile 'org.projectlombok:lombok:1.16.14'
    compile 'io.springfox:springfox-swagger-ui:2.6.1'
    compile 'io.springfox:springfox-swagger2:2.6.1'
    compile 'org.springframework.boot:spring-boot-starter-web:1.5.6.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:1.5.6.RELEASE'
    compile 'org.springframework.boot:spring-boot-starter-security:1.5.6.RELEASE'

    compile 'org.hibernate:hibernate-envers:5.0.12.Final'
    compile 'com.h2database:h2:1.4.193'
    compile 'ma.glasnost.orika:orika-core:1.5.0'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.8.7'
    compile 'org.postgresql:postgresql:42.0.0'

    compile 'io.jsonwebtoken:jjwt:0.7.0'
    compile 'org.apache.commons:commons-io:1.3.2'

    compile 'org.apache.commons:commons-lang3:3.4'

    compile 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.9.0.pr3'

    testCompile 'org.springframework.boot:spring-boot-starter-test:1.5.4.RELEASE'
}

processResources {
    Properties props = new Properties()
    if(project.hasProperty('stage')){
        project.property('stage')
        props.load(new FileInputStream("src/profiles/" + project.property('stage') + ".properties"))
    } else {
        props.load(new FileInputStream("src/profiles/local.properties"))
    }
    expand props
    exclude '*.pdf'
}

task copyProperties(type: Copy) {

    from 'src/main/resources/application.yml'
    into 'out/production/resources'
    Properties props = new Properties()
    if(project.hasProperty('stage')){
        project.property('stage')
        props.load(new FileInputStream("src/profiles/" + project.property('stage') + ".properties"))
    } else {
        props.load(new FileInputStream("src/profiles/local.properties"))
    }
    expand props
}

task copyPdf(type: Copy) {
    from 'src/main/resources/pfs_application.pdf'
    into 'build/resources/main'
}

processResources.finalizedBy copyPdf